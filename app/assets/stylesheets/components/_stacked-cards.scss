:root {
    /* spacing between cards in the stack */
    --offset: 4px; 
    
    /* arbitrary colors */
    --body-text-color: #191C23;
    --body-bg-color: #F4F6F8;
    --card-border-color: #CAD0D8;
    --card-bg-color: #fff;
    
  }
  
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }

  .flex-container {
    width: 100%;
    margin: 0 auto;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    flex-wrap: wrap;
  }
  
  
  .card-container {
    /* give some space between rows of card stacks */
    margin-top: 24px;
  }
  
  .description {
    text-align: center;
  }
  
  .categories {
    position: absolute;
    bottom: 24px;
    display: flex;
    width: 100%;
  }
  
  .category {
    background-color: #EBE6FF;
    padding: 4px;
    height: 23px;
    font-size: 12px;
    line-height: 15px;
    font-weight: 600;
    text-transform: uppercase;
    color: #191C23;
    display: flex;
    align-items: center;
  }
  
  .category:not(:last-child) {
    margin-right: 8px;
  }
  
  .card {
    /* to avoid overlapping over description text */
    margin-top: 8px; 
    
    position: relative;
    cursor: pointer;
    
    /* arbitrary card dimensions */
    // width: 276px;
    // height: 178px;
  }
  
  .card::before,
  .card::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
  }
  
  .card::before,
  .card::after,
  .card-inner {
    width: 100%;
    height: 100%;
  }
  
  .card::before,
  .card::after,
  .card .card-inner {
    background-color: var(--card-bg-color);
    border: 1px solid var(--card-border-color);
    transition: transform 0.3s;
  }
  
  .card::before,
  .card-inner {
    z-index: 1;
  }
  
  .card-inner {
    position: relative;
    padding: 24px;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
  }
  
  
  
  /* offset underneath cards to the left and down from top card */
  .card-bottom-left::before {
    transform: translate(calc(-1 * var(--offset)), var(--offset));
  }
  
  .card-bottom-left::after {
    transform: translate(calc(-1 * var(--offset) * 2), calc(var(--offset) * 2));
  }
  
  /* move top card slightly up and to the right */
  .card-bottom-left:hover .card-inner {
    transform: translate(calc(var(--offset)), calc(-1 * var(--offset)));
  }
  
  /* card3 */
  /* move middle card slightly up and to the right */
  .card3.card-bottom-left:hover::before {
    transform: translate(calc(-1 * var(--offset) / 2), calc(var(--offset) / 2));
  }
  
